@use "sass:string";

@use "sass:color";

.u-hidden {
	display: none !important;
}

@each $name, $value in map-deep-get($tokens, grid, breakpoint) {
	@include breakpoint($name) {
		.u-hiddenUp#{$name} {
			display: none !important;
		}
	}

	@include breakpointDown($name) {
		.u-hiddenDown#{$name} {
			display: none !important;
		}
	}
}

.u-visible {
	visibility: visible;
	z-index: auto;
}

.u-invisible {
	visibility: hidden;
	z-index: -1;
}

.u-loading {
	position: relative;
}

.u-relative {
	position: relative;
}

.u-fontSizeUnset {
	font-size: 0;
}

.u-fixed {
	position: fixed;
	right: 0;
	left: 0;
	overflow-y: hidden;
}

.u-textRegular {
	font-variation-settings: "wght" 400 !important;
}

.u-textBold {
	font-variation-settings: "wght" 600;
}

.u-overflowHidden {
	overflow: hidden;
}

.u-alignBaseline {
	vertical-align: baseline !important;
}

.u-alignTop {
	vertical-align: top !important;
}

.u-alignMiddle {
	vertical-align: middle !important;
}

.u-alignBottom {
	vertical-align: bottom !important;
}

.u-alignTextBottom {
	vertical-align: text-bottom !important;
}

.u-alignTextTop {
	vertical-align: text-top !important;
}

.u-textLeft {
	text-align: left !important;
}

.u-textRight {
	text-align: right !important;
}

.u-textCenter {
	text-align: center !important;
}

.u-textNoWrap {
	white-space: nowrap;
}

@each $position in map-get($tokens, alignPosition) {
	@each $name, $value in map-deep-get($tokens, grid, breakpoint) {
		@include breakpoint($name) {
			.u-text#{$position}#{$name} {
				text-align: #{string.to-lower-case($position)} !important;
			}
		}
	}
}

.u-textNowrap {
	white-space: nowrap !important;
}

.u-textLineTruncate {
	@include truncateLine(100%);
}

.u-textLowercase {
	text-transform: lowercase !important;
}

.u-textUppercase {
	text-transform: uppercase !important;
}

.u-fontNormal {
	font-weight: 400 !important;
}

.u-fontBold {
	font-weight: 600 !important;
}
//.u-textContrast {
//	color: $colorTextContrast !important;
//}
.u-textMuted,
.u-textMuted > * {
	color: $colorTextSecondary !important;
}

.u-textMutedMore {
	color: color.adjust($colorTextSecondary, $lightness: 10%) !important;
}

.u-textSmaller {
	font-size: rem(13.5);
}

.u-textBigger {
	font-size: rem(18);
}

.u-textUnderline {
	text-decoration: underline;
}
//.u-textFeatured {
//	color: $colorFeatured;
//}
.u-bg {
	background-color: var(--colorBg);
}

.u-bg-reset {
	background: #fff;
}

.u-bgComplementary {
	background-color: var(--colorComplementary);
}

.u-bgAccent {
	background-color: var(--colorAccent);
}

.u-bgDark {
	background-color: var(--colorText);

	* {
		color: var(--colorAccent);
	}

	.c-button {
		background-color: var(--colorAccent);
		border-color: var(--colorAccent);
	}
}

.u-bgContrast {
	* {
		color: var(--colorBg);
	}

	background-color: var(--colorText);
}

.u-roundedCorners {
	border-radius: $sizeBorderRadius;
}

.u-hoverUnderline {
	position: relative;
	transform: translateZ(0);
	backface-visibility: hidden;
	cursor: pointer;
	padding-bottom: 2px;

	&:after {
		position: absolute;
		z-index: -1;
		bottom: 0;
		right: 50%;
		left: 50%;
		content: "";
		visibility: hidden;
		background: $colorBg;
		height: 1px;

		@include transition(left right);
	}

	.is-background & {
		&:after {
			background: $colorBg;
		}
	}

	&:hover {
		@include mediaHover {
			&:after {
				z-index: 1;
				right: 0;
				left: 0;
				visibility: visible;
			}
		}
	}
}

.u-controlGroup {
	[type="checkbox"] + label,
	[type="radio"] + label,
	[type="text"] {
		display: inline-flex !important;
	}

	[type="checkbox"]:not(:last-child) + label,
	[type="radio"]:not(:last-child) + label {
		margin-right: 20px !important;
	}

	[type="text"] + button,
	button + a,
	a + button,
	button + button,
	button + div,
	div + button {
		margin: 12px 0 0 0 !important;

		@include breakpoint(S) {
			margin: 0 0 0 12px !important;
		}
	}

	[type="text"] {
		width: 100%;

		@include breakpoint(S) {
			width: auto;
		}
	}

	&.-subscribe {
		display: flex;
		flex-flow: row nowrap;
		width: 100%;
	}
}

.u-alignCenter {
	@include breakpoint(M) {
		display: flex;
		align-items: center;
	}
}

.u-controlButton {
	display: inline-block;
	position: relative;

	button {
		position: absolute;
		right: 0;
		top: 0;
	}
}

.u-scrollOverflow {
	width: calc(100% + 40px);
	mask-image: linear-gradient(90deg, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, .25) 9px, rgba(0, 0, 0, 1) 18px, rgba(0, 0, 0, 1) calc(100% - 18px), rgba(0, 0, 0, .25) calc(100% - 9px), rgba(0, 0, 0, 0));
	padding-left: 20px;
	padding-right: 20px;
	margin-left: -20px;
	margin-right: -20px;
	-webkit-overflow-scrolling: touch;
	scroll-snap-type: x mandatory;
	overflow-x: auto;

	ul {
		display: flex;
		flex-wrap: nowrap;

		li {
			white-space: nowrap;

			&:last-child {
				padding-right: 20px;
			}
		}
	}
}

.u-underline {
	position: relative;
	display: inline-block;

	&:before,
	&:after {
		content: "";
		width: 0;
		height: 1px;
		background-color: $colorBemine;
		display: block;
		position: absolute;
		top: 100%;
		margin-top: -2px;

		@include transition(.1s);
	}

	&:before {
		left: 50%;
	}

	&:after {
		right: 50%;
	}

	&:hover {
		@include mediaHover {
			&:before,
			&:after {
				width: 50%;
			}
		}
	}
}

@each $name, $value in map-get($tokens, spacing) {
	.u-margin#{$name} {
		margin: #{$value} !important;
	}

	.u-padding#{$name} {
		padding: #{$value} !important;
	}
}

@each $position in map-get($tokens, spacingPosition) {
	@each $name, $value in map-get($tokens, spacing) {
		.u-margin#{$position}#{$name} {
			margin-#{to-lower-case($position)}: #{$value} !important;
		}

		.u-padding#{$position}#{$name} {
			padding-#{to-lower-case($position)}: #{$value} !important;
		}

		.u-margin#{$position}Unset {
			margin-#{to-lower-case($position)}: 0 !important;
		}

		.u-padding#{$position}Unset {
			padding-#{to-lower-case($position)}: 0 !important;
		}
	}
}

@each $breakpointName, $breakpointValue in map-deep-get($tokens, grid, breakpoint) {
	@include breakpoint($breakpointName) {
		@each $name, $value in map-get($tokens, spacing) {
			.u-margin#{$name}#{$breakpointName} {
				margin: #{$value} !important;
			}

			.u-padding#{$name}#{$breakpointName} {
				padding: #{$value} !important;
			}
		}
	}
}

@each $breakpointName, $breakpointValue in map-deep-get($tokens, grid, breakpoint) {
	@include breakpoint($breakpointName) {
		@each $position in map-get($tokens, spacingPosition) {
			@each $name, $value in map-get($tokens, spacing) {
				.u-margin#{$position}#{$name}#{$breakpointName} {
					margin-#{to-lower-case($position)}: #{$value} !important;
				}

				.u-padding#{$position}#{$name}#{$breakpointName} {
					padding-#{to-lower-case($position)}: #{$value} !important;
				}

				.u-margin#{$position}Unset#{$breakpointName} {
					margin-#{to-lower-case($position)}: 0 !important;
				}

				.u-padding#{$position}Unset#{$breakpointName} {
					padding-#{to-lower-case($position)}: 0 !important;
				}

				.u-margin#{$name}#{$breakpointName} {
					margin: #{$value} !important;
				}

				.u-padding#{$name}#{$breakpointName} {
					padding: #{$value} !important;
				}
			}
		}
	}
}

.u-scrollbarStyled {
	@extend %scrollbar;
}

.u-textTypography {
	h2,
	h3,
	h4,
	h5 {
		margin-bottom: 16px;

		&:not(:first-child) {
			margin-top: 28px;
		}
	}

	ul,
	ol {
		list-style: disc;
		padding-left: 32px;
		margin-bottom: 12px;

		li {
			line-height: 1.4;

			&:not(:last-child) {
				margin-bottom: 4px;
			}

			ul,
			ol {
				margin-top: 12px;
			}
		}
	}

	ol {
		list-style: decimal;
	}
}

.u-contextWrap {
	position: relative;

	.c-kebab {
		position: absolute;
		right: 5px;
		top: 12px;
	}
}

.u-middleMobile {
	@include breakpointDown(M) {
		align-items: center !important;
	}
}

.u-marginFooterTop {
	@include breakpointDown(M) {
		margin-top: 20px;
	}
}

.u-marginFooterBottom {
	@include breakpointDown(M) {
		margin-bottom: 20px;
	}
}

.u-textRightS {
	@include breakpoint(S) {
		text-align: right;
	}
}

.u-landingHeroBanner {
	color: #fff;
	border-radius: 4px;

	& img, & figure {
		object-fit: cover;
		min-height: 300px;

		@include breakpoint(M) {
			min-height: 320px;
		}
	}

	&__wrapper {
		position: relative;
	}

	&__description {
		background-color: rgba($color: #222, $alpha: 0.2);
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		z-index: 3;
		justify-content: center;
		align-items: center;
		text-align: center;
		@include breakpoint(M) {
			padding: 60px 80px;
			justify-content: flex-start;
			align-items: flex-start;
			text-align: left;
		}
	}
}

.u-marginMUnset {
	@include breakpoint(M) {
		margin-top: -20px;
	}
}

.u-cursorPointer {
	cursor: pointer;
}

.u-noMainGutters {
	margin-bottom: -4rem !important;
}

.u-liquidImage {
	object-fit: cover;
	width: 100%;
	height: 100%;
}

.u-fullHeight {
	height: 100%;
}

.u-border {
	border: 1px solid var(--colorBorder);
}

.u-textColorReset {
	color: var(--colorText) !important;
}

.u-noMainMargin {
	margin-bottom: -4rem !important;
}

.u-width100 {
	width: 100% !important;
}
//.u-bgFavorite {
//	background-color: color.adjust($colorFavorite, $lightness: 20%) !important;
//}
